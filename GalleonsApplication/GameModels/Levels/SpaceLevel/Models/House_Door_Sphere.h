// "House_Door_Sphere.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "House_Door_Sphere.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _House_Door_Sphere_version_
const char House_Door_Sphere_version[4] = { '0','1','9','d' };
#define _House_Door_Sphere_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _House_Door_Sphere_vertexcount_
const unsigned House_Door_Sphere_vertexcount = 160;
#define _House_Door_Sphere_vertexcount_
#endif
#ifndef _House_Door_Sphere_indexcount_
const unsigned House_Door_Sphere_indexcount = 420;
#define _House_Door_Sphere_indexcount_
#endif
#ifndef _House_Door_Sphere_materialcount_
const unsigned House_Door_Sphere_materialcount = 1; // can be used for batched draws
#define _House_Door_Sphere_materialcount_
#endif
#ifndef _House_Door_Sphere_meshcount_
const unsigned House_Door_Sphere_meshcount = 1;
#define _House_Door_Sphere_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _House_Door_Sphere_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT House_Door_Sphere_vertices[160] =
{
	{	{ 0.565545f, 1.481941f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.389554f, 3.268806f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.940467f, 2.717894f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.940467f, 1.938785f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.846398f, 2.893884f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.198593f, 3.326734f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.389554f, 3.268806f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.565545f, 1.481941f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.998395f, 2.129746f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.846398f, 2.893884f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.940467f, 1.938785f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.389554f, 1.387872f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.940467f, 1.938785f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.923900f, -0.382700f, 0.000000f }	},
	{	{ -0.940467f, 1.938785f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.923900f, -0.382700f, 0.000000f }	},
	{	{ -0.846398f, 1.762794f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.831500f, -0.555600f, 0.000000f }	},
	{	{ 1.014566f, 2.362751f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.998800f, 0.049100f, 0.000000f }	},
	{	{ 1.014566f, 2.362751f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.998800f, 0.049100f, 0.000000f }	},
	{	{ 0.998395f, 2.526932f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.980800f, 0.195100f, 0.000000f }	},
	{	{ 0.198593f, 1.329944f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.195100f, -0.980800f, 0.000000f }	},
	{	{ 0.198593f, 1.329944f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.195100f, -0.980800f, 0.000000f }	},
	{	{ 0.389555f, 1.387872f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.382700f, -0.923900f, 0.000000f }	},
	{	{ -0.998394f, 2.129746f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.980800f, -0.195100f, 0.000000f }	},
	{	{ -0.998394f, 2.129746f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.980800f, -0.195100f, 0.000000f }	},
	{	{ -0.389554f, 1.387872f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.382700f, -0.923900f, 0.000000f }	},
	{	{ -0.389554f, 1.387872f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.382700f, -0.923900f, 0.000000f }	},
	{	{ -0.198593f, 1.329945f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.195100f, -0.980800f, 0.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ 0.049100f, 0.998800f, 0.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ 0.049100f, 0.998800f, 0.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.049100f, 0.998800f, 0.000000f }	},
	{	{ -0.940467f, 2.717893f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.923900f, 0.382700f, 0.000000f }	},
	{	{ -0.940467f, 2.717893f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.923900f, 0.382700f, 0.000000f }	},
	{	{ -0.998394f, 2.526932f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.980800f, 0.195100f, 0.000000f }	},
	{	{ 1.014566f, 2.293927f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.998800f, -0.049100f, 0.000000f }	},
	{	{ 1.014566f, 2.293927f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.998800f, -0.049100f, 0.000000f }	},
	{	{ 0.389554f, 3.268806f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.382700f, 0.923900f, 0.000000f }	},
	{	{ 0.389554f, 3.268806f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.382700f, 0.923900f, 0.000000f }	},
	{	{ 0.198593f, 3.326734f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.195100f, 0.980800f, 0.000000f }	},
	{	{ 0.998395f, 2.129746f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.980800f, -0.195100f, 0.000000f }	},
	{	{ 0.998395f, 2.129746f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.980800f, -0.195100f, 0.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.049100f, -0.998800f, 0.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ 0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.565545f, 3.174737f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.555600f, 0.831500f, 0.000000f }	},
	{	{ 0.565545f, 3.174737f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.555600f, 0.831500f, 0.000000f }	},
	{	{ -0.846398f, 2.893884f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.831500f, 0.555600f, 0.000000f }	},
	{	{ -0.846398f, 2.893884f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.831500f, 0.555600f, 0.000000f }	},
	{	{ 0.719803f, 3.048142f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.707100f, 0.707100f, 0.000000f }	},
	{	{ 0.719803f, 3.048142f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.707100f, 0.707100f, 0.000000f }	},
	{	{ -0.719802f, 3.048141f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -0.719802f, 3.048141f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.049100f, 0.998800f, 0.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.049100f, 0.998800f, 0.000000f }	},
	{	{ -0.198593f, 3.326734f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.195100f, 0.980800f, 0.000000f }	},
	{	{ 0.846398f, 2.893884f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.831500f, 0.555600f, 0.000000f }	},
	{	{ 0.846398f, 2.893884f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.831500f, 0.555600f, 0.000000f }	},
	{	{ -0.565545f, 3.174737f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.555600f, 0.831500f, 0.000000f }	},
	{	{ -0.565545f, 3.174737f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.555600f, 0.831500f, 0.000000f }	},
	{	{ -0.198593f, 1.329945f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.195100f, -0.980800f, 0.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.940467f, 2.717894f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.923900f, 0.382700f, 0.000000f }	},
	{	{ 0.940467f, 2.717894f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.923900f, 0.382700f, 0.000000f }	},
	{	{ -0.198593f, 3.326734f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.195100f, 0.980800f, 0.000000f }	},
	{	{ -0.389554f, 3.268806f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.382700f, 0.923900f, 0.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.998395f, 2.526932f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.980800f, 0.195100f, 0.000000f }	},
	{	{ -0.389554f, 3.268806f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.382700f, 0.923900f, 0.000000f }	},
	{	{ 0.198593f, 3.326734f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.195100f, 0.980800f, 0.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.049100f, 0.998800f, 0.000000f }	},
	{	{ 0.940468f, 1.938785f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.923900f, -0.382700f, 0.000000f }	},
	{	{ 0.940468f, 1.938785f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.923900f, -0.382700f, 0.000000f }	},
	{	{ -0.565545f, 1.481941f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.555600f, -0.831500f, 0.000000f }	},
	{	{ -0.565545f, 1.481941f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.555600f, -0.831500f, 0.000000f }	},
	{	{ 0.846399f, 1.762794f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.831500f, -0.555600f, 0.000000f }	},
	{	{ 0.846399f, 1.762794f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.831500f, -0.555600f, 0.000000f }	},
	{	{ -0.719802f, 1.608537f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.719802f, 1.608537f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.707100f, -0.707100f, 0.000000f }	},
	{	{ 0.719803f, 1.608537f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ 0.719803f, 1.608537f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.014578f, 2.294064f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.998800f, -0.049100f, 0.000000f }	},
	{	{ -1.014578f, 2.294064f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.998800f, -0.049100f, 0.000000f }	},
	{	{ -0.998394f, 2.526932f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.980800f, 0.195100f, 0.000000f }	},
	{	{ -1.014578f, 2.362621f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.998800f, 0.049100f, 0.000000f }	},
	{	{ 0.565545f, 1.481941f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.555600f, -0.831500f, 0.000000f }	},
	{	{ 0.565545f, 1.481941f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.555600f, -0.831500f, 0.000000f }	},
	{	{ -0.846398f, 1.762794f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.831500f, -0.555600f, 0.000000f }	},
	{	{ -1.014578f, 2.362621f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.998800f, 0.049100f, 0.000000f }	},
	{	{ 0.389555f, 1.387872f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.382700f, -0.923900f, 0.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.198593f, 1.329944f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.389555f, 1.387872f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.846399f, 1.762794f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.719803f, 1.608537f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.998395f, 2.129746f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.940468f, 1.938785f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 1.014566f, 2.362751f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 1.014566f, 2.293927f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.998395f, 2.526932f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.719803f, 3.048142f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.846398f, 2.893884f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.565545f, 3.174737f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.198593f, 3.326734f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.588783f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.998394f, 2.526932f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -1.014578f, 2.294064f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -1.014578f, 2.362621f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.998394f, 2.129746f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.719802f, 1.608537f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.846398f, 1.762794f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.389554f, 1.387872f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.565545f, 1.481941f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.198593f, 1.329945f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.565545f, 3.174737f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.389554f, 3.268806f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.719802f, 3.048141f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.940467f, 2.717893f, -1.588783f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.198593f, 1.329944f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.198593f, 3.326734f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.719803f, 3.048142f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.565545f, 3.174737f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.940467f, 2.717894f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.846398f, 2.893884f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 1.014566f, 2.362751f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.998395f, 2.526932f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 1.014566f, 2.293927f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.846399f, 1.762794f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.940468f, 1.938785f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.719803f, 1.608537f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ 0.389555f, 1.387872f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.014578f, 2.294064f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.998394f, 2.526932f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.014578f, 2.362621f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.940467f, 2.717893f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.565545f, 3.174737f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.719802f, 3.048141f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.198593f, 3.326734f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.389554f, 3.268806f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.198593f, 1.329945f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.719802f, 1.608537f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.565545f, 1.481941f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.846398f, 1.762794f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.998394f, 2.129746f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -0.032156f, 3.343126f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ -0.049100f, 0.998800f, 0.000000f }	},
	{	{ 0.032156f, 1.313552f, -1.524587f },	{ 0.108197f, 0.016835f, 0.000000f },	{ 0.049100f, -0.998800f, 0.000000f }	},
	{	{ -0.032156f, 1.313552f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ -0.049100f, -0.998800f, 0.000000f }	},
	{	{ 0.032156f, 3.343126f, -1.524587f },	{ 0.016853f, 0.014473f, 0.000000f },	{ 0.049100f, 0.998800f, 0.000000f }	},
};
#define _House_Door_Sphere_vertices_
#endif
#ifndef _House_Door_Sphere_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int House_Door_Sphere_indices[420] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 23,
	 24, 25, 26,
	 27, 28, 19,
	 29, 30, 31,
	 32, 33, 34,
	 35, 36, 37,
	 38, 39, 22,
	 40, 41, 42,
	 43, 44, 39,
	 45, 46, 47,
	 48, 49, 41,
	 50, 51, 36,
	 52, 53, 49,
	 54, 55, 51,
	 56, 57, 58,
	 59, 60, 53,
	 61, 62, 55,
	 63, 31, 64,
	 65, 66, 60,
	 67, 58, 68,
	 69, 70, 25,
	 71, 23, 66,
	 72, 68, 62,
	 73, 42, 74,
	 75, 76, 44,
	 77, 78, 30,
	 79, 80, 76,
	 81, 82, 78,
	 83, 84, 80,
	 85, 86, 28,
	 87, 37, 88,
	 89, 90, 84,
	 91, 20, 82,
	 92, 88, 86,
	 93, 26, 90,
	 94, 95, 96,
	 95, 0, 97,
	 0, 98, 99,
	 98, 100, 101,
	 100, 102, 103,
	 102, 2, 104,
	 2, 105, 106,
	 105, 1, 107,
	 1, 94, 108,
	 94, 0, 95,
	 0, 100, 98,
	 100, 2, 102,
	 2, 1, 105,
	 1, 0, 94,
	 0, 2, 100,
	 3, 5, 109,
	 110, 111, 112,
	 111, 6, 113,
	 6, 114, 115,
	 114, 116, 117,
	 116, 118, 119,
	 118, 8, 120,
	 8, 121, 122,
	 121, 7, 123,
	 7, 110, 124,
	 110, 6, 111,
	 6, 116, 114,
	 116, 8, 118,
	 8, 7, 121,
	 7, 6, 110,
	 6, 8, 116,
	 125, 126, 127,
	 126, 9, 128,
	 9, 129, 130,
	 129, 131, 132,
	 131, 133, 134,
	 133, 11, 135,
	 11, 136, 137,
	 136, 10, 138,
	 10, 125, 139,
	 125, 9, 126,
	 9, 131, 129,
	 131, 11, 133,
	 11, 10, 136,
	 10, 9, 125,
	 9, 11, 131,
	 12, 14, 140,
	 141, 142, 143,
	 142, 15, 144,
	 15, 145, 146,
	 145, 147, 148,
	 147, 149, 150,
	 149, 17, 151,
	 17, 152, 153,
	 152, 16, 154,
	 16, 141, 155,
	 141, 15, 142,
	 15, 147, 145,
	 147, 17, 149,
	 17, 16, 152,
	 16, 15, 141,
	 15, 17, 147,
	 18, 20, 91,
	 21, 23, 71,
	 24, 26, 93,
	 27, 19, 18,
	 29, 31, 63,
	 32, 34, 156,
	 35, 37, 87,
	 38, 22, 21,
	 40, 42, 73,
	 43, 39, 38,
	 45, 47, 157,
	 48, 41, 40,
	 50, 36, 35,
	 52, 49, 48,
	 54, 51, 50,
	 56, 58, 67,
	 59, 53, 52,
	 61, 55, 54,
	 63, 64, 158,
	 65, 60, 59,
	 67, 68, 72,
	 69, 25, 24,
	 71, 66, 65,
	 72, 62, 61,
	 73, 74, 159,
	 75, 44, 43,
	 77, 30, 29,
	 79, 76, 75,
	 81, 78, 77,
	 83, 80, 79,
	 85, 28, 27,
	 87, 88, 92,
	 89, 84, 83,
	 91, 82, 81,
	 92, 86, 85,
	 93, 90, 89,
};
#define _House_Door_Sphere_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _House_Door_Sphere_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL House_Door_Sphere_materials[1] =
{
	{
		{{ 0.600000f, 0.600000f, 0.600000f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		500.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Atlas.014",
		"Atlas_Space.dds",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _House_Door_Sphere_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _House_Door_Sphere_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int House_Door_Sphere_batches[1][2] =
{
	{ 420, 0 },
};
#define _House_Door_Sphere_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _House_Door_Sphere_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH House_Door_Sphere_meshes[1] =
{
	{
		"default",
		420,
		0,
		0,
	},
};
#define _House_Door_Sphere_meshes_
#endif
