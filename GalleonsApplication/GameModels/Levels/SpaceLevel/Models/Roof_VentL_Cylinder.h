// "Roof_VentL_Cylinder.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Roof_VentL_Cylinder.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Roof_VentL_Cylinder_version_
const char Roof_VentL_Cylinder_version[4] = { '0','1','9','d' };
#define _Roof_VentL_Cylinder_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Roof_VentL_Cylinder_vertexcount_
const unsigned Roof_VentL_Cylinder_vertexcount = 159;
#define _Roof_VentL_Cylinder_vertexcount_
#endif
#ifndef _Roof_VentL_Cylinder_indexcount_
const unsigned Roof_VentL_Cylinder_indexcount = 420;
#define _Roof_VentL_Cylinder_indexcount_
#endif
#ifndef _Roof_VentL_Cylinder_materialcount_
const unsigned Roof_VentL_Cylinder_materialcount = 1; // can be used for batched draws
#define _Roof_VentL_Cylinder_materialcount_
#endif
#ifndef _Roof_VentL_Cylinder_meshcount_
const unsigned Roof_VentL_Cylinder_meshcount = 1;
#define _Roof_VentL_Cylinder_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Roof_VentL_Cylinder_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Roof_VentL_Cylinder_vertices[159] =
{
	{	{ -1.405197f, 3.387112f, 0.673036f },	{ 0.049851f, 0.011622f, 0.000000f },	{ -0.510500f, 0.069400f, 0.857000f }	},
	{	{ -1.231855f, 3.560454f, 0.716261f },	{ 0.049843f, 0.011835f, 0.000000f },	{ -0.290000f, 0.290000f, 0.912100f }	},
	{	{ -1.501531f, 3.830130f, 0.544785f },	{ 0.050184f, 0.011823f, 0.000000f },	{ -0.290000f, 0.290000f, 0.912100f }	},
	{	{ -1.557631f, 3.234678f, 0.548573f },	{ 0.049874f, 0.011422f, 0.000000f },	{ -0.704500f, -0.124600f, 0.698700f }	},
	{	{ -1.633403f, 3.698259f, 0.511901f },	{ 0.050190f, 0.011660f, 0.000000f },	{ -0.510500f, 0.069400f, 0.857000f }	},
	{	{ -1.557631f, 3.234678f, 0.548573f },	{ 0.051013f, 0.012495f, 0.000000f },	{ -0.704500f, -0.124600f, 0.698700f }	},
	{	{ -1.749369f, 3.582293f, 0.417215f },	{ 0.051347f, 0.012396f, 0.000000f },	{ -0.704500f, -0.124600f, 0.698700f }	},
	{	{ -1.835442f, 3.496220f, 0.272148f },	{ 0.051330f, 0.012270f, 0.000000f },	{ -0.848500f, -0.268500f, 0.456000f }	},
	{	{ -1.730973f, 3.061336f, 0.123974f },	{ 0.050983f, 0.012129f, 0.000000f },	{ -0.925100f, -0.345200f, 0.158400f }	},
	{	{ -1.670772f, 3.121536f, 0.357886f },	{ 0.050990f, 0.012331f, 0.000000f },	{ -0.848500f, -0.268500f, 0.456000f }	},
	{	{ -1.730973f, 3.061336f, -0.124951f },	{ 0.050990f, 0.011916f, 0.000000f },	{ -0.925100f, -0.345200f, -0.158400f }	},
	{	{ -1.881240f, 3.450422f, 0.094197f },	{ 0.051324f, 0.012117f, 0.000000f },	{ -0.925100f, -0.345200f, 0.158400f }	},
	{	{ -1.881240f, 3.450422f, -0.095174f },	{ 0.051330f, 0.011955f, 0.000000f },	{ -0.925100f, -0.345200f, -0.158400f }	},
	{	{ -1.835442f, 3.496220f, -0.273125f },	{ 0.051347f, 0.011803f, 0.000000f },	{ -0.848500f, -0.268500f, -0.456000f }	},
	{	{ -1.670772f, 3.121537f, -0.358863f },	{ 0.049426f, 0.011258f, 0.000000f },	{ -0.848500f, -0.268500f, -0.456000f }	},
	{	{ -1.835442f, 3.496220f, -0.273125f },	{ 0.049096f, 0.011371f, 0.000000f },	{ -0.848500f, -0.268500f, -0.456000f }	},
	{	{ -1.749369f, 3.582293f, -0.418192f },	{ 0.049117f, 0.011496f, 0.000000f },	{ -0.704500f, -0.124600f, -0.698700f }	},
	{	{ -1.405197f, 3.387112f, -0.674012f },	{ 0.049469f, 0.011623f, 0.000000f },	{ -0.510500f, 0.069400f, -0.857000f }	},
	{	{ -1.557631f, 3.234678f, -0.549550f },	{ 0.049454f, 0.011422f, 0.000000f },	{ -0.704500f, -0.124600f, -0.698700f }	},
	{	{ -1.633403f, 3.698259f, -0.512877f },	{ 0.049129f, 0.011648f, 0.000000f },	{ -0.510500f, 0.069400f, -0.857000f }	},
	{	{ -1.501531f, 3.830130f, -0.545761f },	{ 0.049129f, 0.011811f, 0.000000f },	{ -0.290000f, 0.290000f, -0.912100f }	},
	{	{ -1.058513f, 3.733796f, -0.674012f },	{ 0.049454f, 0.012037f, 0.000000f },	{ -0.069400f, 0.510500f, -0.857000f }	},
	{	{ -1.231855f, 3.560454f, -0.717237f },	{ 0.049469f, 0.011837f, 0.000000f },	{ -0.290000f, 0.290000f, -0.912100f }	},
	{	{ -1.369660f, 3.962002f, -0.512877f },	{ 0.049117f, 0.011964f, 0.000000f },	{ -0.069400f, 0.510500f, -0.857000f }	},
	{	{ -1.253694f, 4.077968f, -0.418192f },	{ 0.049096f, 0.012088f, 0.000000f },	{ 0.124600f, 0.704500f, -0.698700f }	},
	{	{ -0.792938f, 3.999371f, -0.358863f },	{ 0.049485f, 0.012037f, 0.000000f },	{ 0.268500f, 0.848500f, -0.456000f }	},
	{	{ -0.906078f, 3.886230f, -0.549550f },	{ 0.049426f, 0.012201f, 0.000000f },	{ 0.124600f, 0.704500f, -0.698700f }	},
	{	{ -1.253694f, 4.077968f, -0.418192f },	{ 0.049843f, 0.012088f, 0.000000f },	{ 0.124600f, 0.704500f, -0.698700f }	},
	{	{ -1.167621f, 4.164041f, -0.273125f },	{ 0.049821f, 0.011964f, 0.000000f },	{ 0.268500f, 0.848500f, -0.456000f }	},
	{	{ -1.121823f, 4.209839f, -0.095174f },	{ 0.049810f, 0.011811f, 0.000000f },	{ 0.345200f, 0.925100f, -0.158400f }	},
	{	{ -0.732736f, 4.059572f, 0.123974f },	{ 0.049469f, 0.011623f, 0.000000f },	{ 0.345200f, 0.925100f, 0.158400f }	},
	{	{ -0.732736f, 4.059572f, -0.124951f },	{ 0.049469f, 0.011837f, 0.000000f },	{ 0.345200f, 0.925100f, -0.158400f }	},
	{	{ -0.792937f, 3.999372f, 0.357886f },	{ 0.049485f, 0.011422f, 0.000000f },	{ 0.268500f, 0.848500f, 0.456000f }	},
	{	{ -1.121823f, 4.209839f, 0.094197f },	{ 0.049810f, 0.011648f, 0.000000f },	{ 0.345200f, 0.925100f, 0.158400f }	},
	{	{ -1.167621f, 4.164041f, 0.272148f },	{ 0.049821f, 0.011496f, 0.000000f },	{ 0.268500f, 0.848500f, 0.456000f }	},
	{	{ -1.253694f, 4.077968f, 0.417215f },	{ 0.049843f, 0.011371f, 0.000000f },	{ 0.124600f, 0.704500f, 0.698700f }	},
	{	{ -1.835442f, 3.496220f, -0.273125f },	{ 0.050325f, 0.013197f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.881240f, 3.450422f, -0.095174f },	{ 0.050426f, 0.013322f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.803619f, 3.528043f, -0.075818f },	{ 0.050486f, 0.013249f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.058513f, 3.733796f, 0.673035f },	{ 0.049851f, 0.012036f, 0.000000f },	{ -0.069400f, 0.510500f, 0.857000f }	},
	{	{ -0.906078f, 3.886230f, 0.548573f },	{ 0.049874f, 0.012201f, 0.000000f },	{ 0.124600f, 0.704500f, 0.698700f }	},
	{	{ -1.253694f, 4.077968f, 0.417215f },	{ 0.050207f, 0.012101f, 0.000000f },	{ 0.124600f, 0.704500f, 0.698700f }	},
	{	{ -1.369660f, 3.962002f, 0.511901f },	{ 0.050190f, 0.011976f, 0.000000f },	{ -0.069400f, 0.510500f, 0.857000f }	},
	{	{ -0.792937f, 3.999372f, 0.357886f },	{ 0.049888f, 0.013394f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.670772f, 3.121536f, 0.357886f },	{ 0.050067f, 0.012345f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.557631f, 3.234678f, -0.549550f },	{ 0.049300f, 0.012345f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.459132f, 3.787731f, -0.434295f },	{ 0.050320f, 0.011530f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.501531f, 3.830130f, -0.434295f },	{ 0.050271f, 0.011530f, 0.000000f },	{ -0.000000f, -0.000000f, 1.000000f }	},
	{	{ -1.606445f, 3.725216f, -0.408133f },	{ 0.050280f, 0.011652f, 0.000000f },	{ 0.241800f, 0.241800f, 0.939700f }	},
	{	{ -1.304358f, 4.027304f, -0.332803f },	{ 0.050595f, 0.012613f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.253694f, 4.077968f, -0.418192f },	{ 0.050563f, 0.012524f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.369660f, 3.962002f, -0.512877f },	{ 0.050426f, 0.012605f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.253694f, 4.077968f, 0.417215f },	{ 0.051165f, 0.012882f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.167621f, 4.164041f, 0.272148f },	{ 0.051111f, 0.012729f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.235880f, 4.095781f, 0.216415f },	{ 0.051031f, 0.012777f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.881240f, 3.450422f, 0.094197f },	{ 0.050563f, 0.013403f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.835442f, 3.496220f, 0.272148f },	{ 0.050718f, 0.013431f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.767183f, 3.564479f, 0.216415f },	{ 0.050718f, 0.013336f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.501531f, 3.830130f, -0.434295f },	{ 0.050405f, 0.012777f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.501531f, 3.830130f, -0.545761f },	{ 0.050325f, 0.012729f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.633403f, 3.698259f, -0.512877f },	{ 0.050271f, 0.012882f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.121823f, 4.209839f, 0.094197f },	{ 0.051010f, 0.012605f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.121823f, 4.209839f, -0.095174f },	{ 0.050874f, 0.012524f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.199444f, 4.132217f, -0.075818f },	{ 0.050842f, 0.012613f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.698705f, 3.632957f, 0.331827f },	{ 0.050842f, 0.013313f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.749369f, 3.582293f, 0.417215f },	{ 0.050874f, 0.013403f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.633403f, 3.698259f, 0.511901f },	{ 0.051010f, 0.013322f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.749369f, 3.582293f, -0.418192f },	{ 0.050271f, 0.013045f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.767182f, 3.564479f, -0.217392f },	{ 0.050405f, 0.013149f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.235880f, 4.095781f, -0.217392f },	{ 0.050718f, 0.012591f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.167621f, 4.164041f, -0.273125f },	{ 0.050718f, 0.012495f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.369660f, 3.962002f, 0.511901f },	{ 0.051165f, 0.013045f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.304358f, 4.027304f, 0.331827f },	{ 0.051074f, 0.012899f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.803619f, 3.528043f, 0.074841f },	{ 0.050595f, 0.013313f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.396618f, 3.935044f, -0.408133f },	{ 0.050486f, 0.012678f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.698705f, 3.632957f, -0.332803f },	{ 0.050363f, 0.013028f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.606445f, 3.725217f, 0.407156f },	{ 0.050950f, 0.013249f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.501531f, 3.830130f, 0.544785f },	{ 0.051111f, 0.013197f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.501531f, 3.830130f, 0.433318f },	{ 0.051031f, 0.013149f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.261958f, 3.984905f, 0.331827f },	{ 0.050481f, 0.011277f, 0.000000f },	{ -0.454500f, -0.454500f, -0.766000f }	},
	{	{ -1.304358f, 4.027304f, 0.331827f },	{ 0.050432f, 0.011279f, 0.000000f },	{ -0.454500f, -0.454500f, -0.766000f }	},
	{	{ -1.235880f, 4.095781f, 0.216415f },	{ 0.050418f, 0.011379f, 0.000000f },	{ -0.612400f, -0.612400f, -0.500000f }	},
	{	{ -1.606445f, 3.725217f, 0.407156f },	{ 0.050351f, 0.011379f, 0.000000f },	{ 0.241800f, 0.241800f, -0.939700f }	},
	{	{ -1.501531f, 3.830130f, 0.433318f },	{ 0.050346f, 0.011500f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -1.459132f, 3.787731f, 0.433318f },	{ 0.050395f, 0.011499f, 0.000000f },	{ -0.000000f, -0.000000f, -1.000000f }	},
	{	{ -1.698705f, 3.632957f, -0.332803f },	{ 0.050298f, 0.011751f, 0.000000f },	{ 0.454500f, 0.454500f, 0.766000f }	},
	{	{ -1.656306f, 3.590558f, -0.332803f },	{ 0.050346f, 0.011751f, 0.000000f },	{ 0.454500f, 0.454500f, 0.766000f }	},
	{	{ -1.199444f, 4.132217f, 0.074841f },	{ 0.050414f, 0.011500f, 0.000000f },	{ -0.696400f, -0.696400f, -0.173600f }	},
	{	{ -1.157045f, 4.089818f, 0.074841f },	{ 0.050462f, 0.011499f, 0.000000f },	{ -0.696400f, -0.696400f, -0.173600f }	},
	{	{ -1.656306f, 3.590558f, -0.332803f },	{ 0.051241f, 0.012861f, 0.000000f },	{ 0.454500f, 0.454500f, 0.766000f }	},
	{	{ -1.698705f, 3.632957f, -0.332803f },	{ 0.051192f, 0.012861f, 0.000000f },	{ 0.454500f, 0.454500f, 0.766000f }	},
	{	{ -1.767182f, 3.564479f, -0.217392f },	{ 0.051175f, 0.012960f, 0.000000f },	{ 0.612400f, 0.612400f, 0.500000f }	},
	{	{ -1.199444f, 4.132217f, -0.075818f },	{ 0.050418f, 0.011630f, 0.000000f },	{ -0.696400f, -0.696400f, 0.173600f }	},
	{	{ -1.803619f, 3.528043f, -0.075818f },	{ 0.051165f, 0.013081f, 0.000000f },	{ 0.696400f, 0.696400f, 0.173600f }	},
	{	{ -1.761220f, 3.485644f, -0.075818f },	{ 0.051214f, 0.013081f, 0.000000f },	{ 0.696400f, 0.696400f, 0.173700f }	},
	{	{ -1.157045f, 4.089818f, -0.075818f },	{ 0.050467f, 0.011628f, 0.000000f },	{ -0.696400f, -0.696400f, 0.173600f }	},
	{	{ -1.235880f, 4.095781f, -0.217392f },	{ 0.050432f, 0.011751f, 0.000000f },	{ -0.612400f, -0.612400f, 0.500000f }	},
	{	{ -1.803619f, 3.528043f, 0.074841f },	{ 0.051165f, 0.013211f, 0.000000f },	{ 0.696400f, 0.696400f, -0.173600f }	},
	{	{ -1.235880f, 4.095781f, -0.217392f },	{ 0.050298f, 0.011180f, 0.000000f },	{ -0.612400f, -0.612400f, 0.500000f }	},
	{	{ -1.304358f, 4.027304f, -0.332803f },	{ 0.050280f, 0.011279f, 0.000000f },	{ -0.454500f, -0.454500f, 0.766000f }	},
	{	{ -1.261959f, 3.984905f, -0.332803f },	{ 0.050329f, 0.011279f, 0.000000f },	{ -0.454500f, -0.454500f, 0.766000f }	},
	{	{ -1.761220f, 3.485644f, 0.074841f },	{ 0.051214f, 0.013211f, 0.000000f },	{ 0.696400f, 0.696400f, -0.173600f }	},
	{	{ -1.767183f, 3.564479f, 0.216415f },	{ 0.051175f, 0.013332f, 0.000000f },	{ 0.612400f, 0.612400f, -0.500000f }	},
	{	{ -1.396618f, 3.935044f, -0.408133f },	{ 0.050271f, 0.011401f, 0.000000f },	{ -0.241800f, -0.241800f, 0.939700f }	},
	{	{ -1.354218f, 3.892645f, -0.408133f },	{ 0.050320f, 0.011401f, 0.000000f },	{ -0.241800f, -0.241800f, 0.939700f }	},
	{	{ -1.396617f, 3.935044f, 0.407156f },	{ 0.050351f, 0.011630f, 0.000000f },	{ -0.241800f, -0.241800f, -0.939700f }	},
	{	{ -1.354218f, 3.892645f, 0.407156f },	{ 0.050400f, 0.011628f, 0.000000f },	{ -0.241800f, -0.241800f, -0.939700f }	},
	{	{ -1.724783f, 3.522080f, 0.216415f },	{ 0.051223f, 0.013332f, 0.000000f },	{ 0.612400f, 0.612400f, -0.500000f }	},
	{	{ -1.698705f, 3.632957f, 0.331827f },	{ 0.051192f, 0.013431f, 0.000000f },	{ 0.454500f, 0.454500f, -0.766000f }	},
	{	{ -1.304358f, 4.027304f, 0.331827f },	{ 0.050365f, 0.011751f, 0.000000f },	{ -0.454500f, -0.454500f, -0.766000f }	},
	{	{ -1.261958f, 3.984905f, 0.331827f },	{ 0.050414f, 0.011749f, 0.000000f },	{ -0.454500f, -0.454500f, -0.766000f }	},
	{	{ -1.698705f, 3.632957f, 0.331827f },	{ 0.050365f, 0.011279f, 0.000000f },	{ 0.454500f, 0.454500f, -0.766000f }	},
	{	{ -1.564046f, 3.682817f, 0.407156f },	{ 0.050400f, 0.011377f, 0.000000f },	{ 0.241800f, 0.241800f, -0.939700f }	},
	{	{ -1.724783f, 3.522080f, 0.216415f },	{ 0.201870f, 0.015891f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.193481f, 4.053382f, 0.216415f },	{ 0.202350f, 0.015476f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.261959f, 3.984905f, -0.332803f },	{ 0.201994f, 0.015169f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.749369f, 3.582293f, 0.417215f },	{ 0.050207f, 0.011508f, 0.000000f },	{ -0.704500f, -0.124600f, 0.698700f }	},
	{	{ -1.670772f, 3.121537f, -0.358863f },	{ 0.051013f, 0.011716f, 0.000000f },	{ -0.848500f, -0.268500f, -0.456000f }	},
	{	{ -0.906078f, 3.886230f, 0.548573f },	{ 0.049513f, 0.011258f, 0.000000f },	{ 0.124600f, 0.704500f, 0.698700f }	},
	{	{ -1.405197f, 3.387112f, 0.673036f },	{ 0.050271f, 0.012709f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.058513f, 3.733796f, 0.673035f },	{ 0.050200f, 0.013124f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.231855f, 3.560454f, 0.716261f },	{ 0.050271f, 0.012923f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.906078f, 3.886230f, 0.548573f },	{ 0.050067f, 0.013287f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.732736f, 4.059572f, -0.124951f },	{ 0.049479f, 0.013394f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.732736f, 4.059572f, 0.123974f },	{ 0.049683f, 0.013431f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.906078f, 3.886230f, -0.549550f },	{ 0.049167f, 0.013124f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -0.792938f, 3.999371f, -0.358863f },	{ 0.049300f, 0.013287f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.231855f, 3.560454f, -0.717237f },	{ 0.049096f, 0.012709f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.058513f, 3.733796f, -0.674012f },	{ 0.049096f, 0.012923f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.405197f, 3.387112f, -0.674012f },	{ 0.049167f, 0.012509f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.730973f, 3.061336f, -0.124951f },	{ 0.049683f, 0.012201f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.670772f, 3.121537f, -0.358863f },	{ 0.049479f, 0.012238f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.730973f, 3.061336f, 0.123974f },	{ 0.049888f, 0.012238f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.557631f, 3.234678f, 0.548573f },	{ 0.050200f, 0.012509f, 0.000000f },	{ 0.707100f, -0.707100f, 0.000000f }	},
	{	{ -1.564046f, 3.682817f, -0.408133f },	{ 0.050329f, 0.011652f, 0.000000f },	{ 0.241800f, 0.241800f, 0.939700f }	},
	{	{ -1.606445f, 3.725216f, -0.408133f },	{ 0.050363f, 0.012899f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.199444f, 4.132217f, 0.074841f },	{ 0.050950f, 0.012678f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.396617f, 3.935044f, 0.407156f },	{ 0.051074f, 0.013028f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.193481f, 4.053382f, 0.216415f },	{ 0.050467f, 0.011377f, 0.000000f },	{ -0.612400f, -0.612400f, -0.500000f }	},
	{	{ -1.724783f, 3.522080f, -0.217392f },	{ 0.051223f, 0.012960f, 0.000000f },	{ 0.612400f, 0.612400f, 0.500000f }	},
	{	{ -1.193481f, 4.053382f, -0.217392f },	{ 0.050481f, 0.011749f, 0.000000f },	{ -0.612400f, -0.612400f, 0.500000f }	},
	{	{ -1.193481f, 4.053382f, -0.217392f },	{ 0.050346f, 0.011180f, 0.000000f },	{ -0.612400f, -0.612400f, 0.500000f }	},
	{	{ -1.656306f, 3.590558f, 0.331827f },	{ 0.051241f, 0.013431f, 0.000000f },	{ 0.454500f, 0.454500f, -0.766000f }	},
	{	{ -1.656306f, 3.590558f, 0.331827f },	{ 0.050414f, 0.011277f, 0.000000f },	{ 0.454500f, 0.454500f, -0.766000f }	},
	{	{ -1.354218f, 3.892645f, 0.407156f },	{ 0.202307f, 0.015727f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.564046f, 3.682817f, 0.407156f },	{ 0.202118f, 0.015891f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.459132f, 3.787731f, 0.433318f },	{ 0.202226f, 0.015826f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.656306f, 3.590558f, 0.331827f },	{ 0.201994f, 0.015913f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.761220f, 3.485644f, -0.075818f },	{ 0.201681f, 0.015727f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.761220f, 3.485644f, 0.074841f },	{ 0.201762f, 0.015826f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.656306f, 3.590558f, -0.332803f },	{ 0.201638f, 0.015476f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.724783f, 3.522080f, -0.217392f },	{ 0.201638f, 0.015606f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.459132f, 3.787731f, -0.434295f },	{ 0.201762f, 0.015256f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.564046f, 3.682817f, -0.408133f },	{ 0.201681f, 0.015355f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.354218f, 3.892645f, -0.408133f },	{ 0.201870f, 0.015191f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.157045f, 4.089818f, -0.075818f },	{ 0.202226f, 0.015256f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.193481f, 4.053382f, -0.217392f },	{ 0.202118f, 0.015191f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.157045f, 4.089818f, 0.074841f },	{ 0.202307f, 0.015355f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
	{	{ -1.261958f, 3.984905f, 0.331827f },	{ 0.202350f, 0.015606f, 0.000000f },	{ -0.707100f, 0.707100f, 0.000000f }	},
};
#define _Roof_VentL_Cylinder_vertices_
#endif
#ifndef _Roof_VentL_Cylinder_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Roof_VentL_Cylinder_indices[420] =
{
	 0, 1, 2,
	 3, 0, 4,
	 5, 6, 7,
	 8, 9, 7,
	 10, 8, 11,
	 10, 12, 13,
	 14, 15, 16,
	 17, 18, 16,
	 17, 19, 20,
	 21, 22, 20,
	 21, 23, 24,
	 25, 26, 27,
	 25, 28, 29,
	 30, 31, 29,
	 32, 30, 33,
	 32, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 39, 42, 2,
	 43, 44, 45,
	 46, 47, 48,
	 49, 50, 51,
	 52, 53, 54,
	 55, 56, 57,
	 58, 59, 60,
	 61, 62, 63,
	 64, 65, 66,
	 67, 36, 68,
	 69, 70, 50,
	 71, 52, 72,
	 37, 55, 73,
	 74, 51, 59,
	 54, 53, 61,
	 57, 56, 65,
	 60, 67, 75,
	 76, 66, 77,
	 62, 70, 69,
	 78, 77, 71,
	 79, 80, 81,
	 82, 83, 84,
	 48, 85, 86,
	 81, 87, 88,
	 89, 90, 91,
	 88, 87, 92,
	 91, 93, 94,
	 95, 92, 96,
	 94, 93, 97,
	 98, 99, 100,
	 101, 97, 102,
	 99, 103, 104,
	 83, 105, 106,
	 107, 102, 108,
	 103, 47, 46,
	 105, 109, 110,
	 111, 82, 112,
	 113, 114, 115,
	 0, 2, 4,
	 3, 4, 116,
	 5, 7, 9,
	 8, 7, 11,
	 10, 11, 12,
	 10, 13, 117,
	 14, 16, 18,
	 17, 16, 19,
	 17, 20, 22,
	 21, 20, 23,
	 21, 24, 26,
	 25, 27, 28,
	 25, 29, 31,
	 30, 29, 33,
	 32, 33, 34,
	 32, 35, 118,
	 36, 38, 68,
	 39, 41, 42,
	 39, 2, 1,
	 119, 120, 121,
	 120, 43, 122,
	 43, 123, 124,
	 123, 125, 126,
	 125, 127, 128,
	 127, 45, 129,
	 45, 130, 131,
	 130, 44, 132,
	 44, 119, 133,
	 119, 43, 120,
	 43, 125, 123,
	 125, 45, 127,
	 45, 44, 130,
	 44, 43, 119,
	 43, 45, 125,
	 46, 48, 134,
	 49, 51, 74,
	 52, 54, 72,
	 55, 57, 73,
	 58, 60, 135,
	 61, 63, 136,
	 64, 66, 76,
	 67, 68, 75,
	 69, 50, 49,
	 71, 72, 137,
	 37, 73, 38,
	 74, 59, 58,
	 54, 61, 136,
	 57, 65, 64,
	 60, 75, 135,
	 76, 77, 78,
	 62, 69, 63,
	 78, 71, 137,
	 79, 81, 138,
	 82, 84, 112,
	 48, 86, 134,
	 81, 88, 138,
	 89, 91, 139,
	 88, 92, 95,
	 91, 94, 139,
	 95, 96, 140,
	 94, 97, 101,
	 98, 100, 141,
	 101, 102, 107,
	 99, 104, 100,
	 83, 106, 84,
	 107, 108, 142,
	 103, 46, 104,
	 105, 110, 106,
	 111, 112, 143,
	 144, 145, 146,
	 145, 113, 147,
	 113, 148, 149,
	 148, 150, 151,
	 150, 152, 153,
	 152, 115, 154,
	 115, 155, 156,
	 155, 114, 157,
	 114, 144, 158,
	 144, 113, 145,
	 113, 150, 148,
	 150, 115, 152,
	 115, 114, 155,
	 114, 113, 144,
	 113, 115, 150,
};
#define _Roof_VentL_Cylinder_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Roof_VentL_Cylinder_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Roof_VentL_Cylinder_materials[1] =
{
	{
		{{ 0.600000f, 0.600000f, 0.600000f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		500.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Atlas.046",
		"Atlas_Space.dds",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Roof_VentL_Cylinder_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Roof_VentL_Cylinder_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Roof_VentL_Cylinder_batches[1][2] =
{
	{ 420, 0 },
};
#define _Roof_VentL_Cylinder_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Roof_VentL_Cylinder_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Roof_VentL_Cylinder_meshes[1] =
{
	{
		"default",
		420,
		0,
		0,
	},
};
#define _Roof_VentL_Cylinder_meshes_
#endif
